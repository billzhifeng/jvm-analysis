<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.scaffold.dal.dao.AcctRecordDOMapper">
  <resultMap id="BaseResultMap" type="com.github.scaffold.dal.dataobject.AcctRecordDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="source_acct_id" jdbcType="BIGINT" property="sourceAcctId" />
    <result column="before_balance" jdbcType="BIGINT" property="beforeBalance" />
    <result column="trans_amount" jdbcType="BIGINT" property="transAmount" />
    <result column="after_balance" jdbcType="BIGINT" property="afterBalance" />
    <result column="trans_no" jdbcType="BIGINT" property="transNo" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="fund_dirc" jdbcType="CHAR" property="fundDirc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, source_acct_id, before_balance, trans_amount, after_balance, trans_no, created_time, 
    fund_dirc
  </sql>
  <select id="selectByExample" parameterType="com.github.scaffold.dal.dataobject.AcctRecordDOCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from acct_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offSet !=null and length != null">
      limit ${offSet}, ${length}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acct_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from acct_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.github.scaffold.dal.dataobject.AcctRecordDO">
    insert into acct_record (id, source_acct_id, before_balance, 
      trans_amount, after_balance, trans_no, 
      created_time, fund_dirc)
    values (#{id,jdbcType=BIGINT}, #{sourceAcctId,jdbcType=BIGINT}, #{beforeBalance,jdbcType=BIGINT}, 
      #{transAmount,jdbcType=BIGINT}, #{afterBalance,jdbcType=BIGINT}, #{transNo,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{fundDirc,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.github.scaffold.dal.dataobject.AcctRecordDO">
    insert into acct_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sourceAcctId != null">
        source_acct_id,
      </if>
      <if test="beforeBalance != null">
        before_balance,
      </if>
      <if test="transAmount != null">
        trans_amount,
      </if>
      <if test="afterBalance != null">
        after_balance,
      </if>
      <if test="transNo != null">
        trans_no,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="fundDirc != null">
        fund_dirc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sourceAcctId != null">
        #{sourceAcctId,jdbcType=BIGINT},
      </if>
      <if test="beforeBalance != null">
        #{beforeBalance,jdbcType=BIGINT},
      </if>
      <if test="transAmount != null">
        #{transAmount,jdbcType=BIGINT},
      </if>
      <if test="afterBalance != null">
        #{afterBalance,jdbcType=BIGINT},
      </if>
      <if test="transNo != null">
        #{transNo,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fundDirc != null">
        #{fundDirc,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.scaffold.dal.dataobject.AcctRecordDOCondition" resultType="java.lang.Long">
    select count(*) from acct_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.scaffold.dal.dataobject.AcctRecordDO">
    update acct_record
    <set>
      <if test="sourceAcctId != null">
        source_acct_id = #{sourceAcctId,jdbcType=BIGINT},
      </if>
      <if test="beforeBalance != null">
        before_balance = #{beforeBalance,jdbcType=BIGINT},
      </if>
      <if test="transAmount != null">
        trans_amount = #{transAmount,jdbcType=BIGINT},
      </if>
      <if test="afterBalance != null">
        after_balance = #{afterBalance,jdbcType=BIGINT},
      </if>
      <if test="transNo != null">
        trans_no = #{transNo,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fundDirc != null">
        fund_dirc = #{fundDirc,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.scaffold.dal.dataobject.AcctRecordDO">
    update acct_record
    set source_acct_id = #{sourceAcctId,jdbcType=BIGINT},
      before_balance = #{beforeBalance,jdbcType=BIGINT},
      trans_amount = #{transAmount,jdbcType=BIGINT},
      after_balance = #{afterBalance,jdbcType=BIGINT},
      trans_no = #{transNo,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      fund_dirc = #{fundDirc,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>